[{"D:\\Personal\\Workspace\\shek_fashion\\src\\index.tsx":"1","D:\\Personal\\Workspace\\shek_fashion\\src\\serviceWorker.ts":"2","D:\\Personal\\Workspace\\shek_fashion\\src\\config\\firebase.ts":"3","D:\\Personal\\Workspace\\shek_fashion\\src\\App.tsx":"4","D:\\Personal\\Workspace\\shek_fashion\\src\\store\\reducers\\index.ts":"5","D:\\Personal\\Workspace\\shek_fashion\\src\\components\\auth\\signin.tsx":"6","D:\\Personal\\Workspace\\shek_fashion\\src\\components\\auth\\signup.tsx":"7","D:\\Personal\\Workspace\\shek_fashion\\src\\components\\dashboard\\dashboard.tsx":"8","D:\\Personal\\Workspace\\shek_fashion\\src\\components\\router\\PrivateRouteWithRole.tsx":"9","D:\\Personal\\Workspace\\shek_fashion\\src\\components\\layout\\navbar.tsx":"10","D:\\Personal\\Workspace\\shek_fashion\\src\\components\\router\\PrivateRoute.tsx":"11","D:\\Personal\\Workspace\\shek_fashion\\src\\components\\product\\productForm.tsx":"12","D:\\Personal\\Workspace\\shek_fashion\\src\\components\\product\\product.tsx":"13","D:\\Personal\\Workspace\\shek_fashion\\src\\components\\product\\productEditForm.tsx":"14","D:\\Personal\\Workspace\\shek_fashion\\src\\components\\sales\\sales.tsx":"15","D:\\Personal\\Workspace\\shek_fashion\\src\\components\\sales\\salesEditForm.tsx":"16","D:\\Personal\\Workspace\\shek_fashion\\src\\components\\report\\report.tsx":"17","D:\\Personal\\Workspace\\shek_fashion\\src\\components\\sales\\salesForm.tsx":"18","D:\\Personal\\Workspace\\shek_fashion\\src\\components\\users\\users.tsx":"19","D:\\Personal\\Workspace\\shek_fashion\\src\\components\\settings\\settingsForm.tsx":"20","D:\\Personal\\Workspace\\shek_fashion\\src\\components\\stock\\lowStockList.tsx":"21","D:\\Personal\\Workspace\\shek_fashion\\src\\components\\settings\\settings.tsx":"22","D:\\Personal\\Workspace\\shek_fashion\\src\\components\\settings\\settingsEditForm.tsx":"23","D:\\Personal\\Workspace\\shek_fashion\\src\\store\\actions\\categoryActions.ts":"24","D:\\Personal\\Workspace\\shek_fashion\\src\\store\\actions\\authActions.ts":"25","D:\\Personal\\Workspace\\shek_fashion\\src\\store\\actions\\productActions.ts":"26","D:\\Personal\\Workspace\\shek_fashion\\src\\store\\actions\\userActions.ts":"27","D:\\Personal\\Workspace\\shek_fashion\\src\\components\\layout\\title.tsx":"28","D:\\Personal\\Workspace\\shek_fashion\\src\\components\\category\\category.tsx":"29","D:\\Personal\\Workspace\\shek_fashion\\src\\store\\actions\\salesAction.ts":"30","D:\\Personal\\Workspace\\shek_fashion\\src\\components\\report\\reportTable.tsx":"31","D:\\Personal\\Workspace\\shek_fashion\\src\\components\\layout\\orders.tsx":"32","D:\\Personal\\Workspace\\shek_fashion\\src\\components\\brand\\brands.tsx":"33","D:\\Personal\\Workspace\\shek_fashion\\src\\store\\actions\\brandActions.ts":"34","D:\\Personal\\Workspace\\shek_fashion\\src\\components\\brand\\brandEditForm.tsx":"35","D:\\Personal\\Workspace\\shek_fashion\\src\\components\\brand\\brandForm.tsx":"36","D:\\Personal\\Workspace\\shek_fashion\\src\\store\\reducers\\productReducer.ts":"37","D:\\Personal\\Workspace\\shek_fashion\\src\\store\\reducers\\types.ts":"38"},{"size":1616,"mtime":1608402678434,"results":"39","hashOfConfig":"40"},{"size":5444,"mtime":1608402678438,"results":"41","hashOfConfig":"40"},{"size":556,"mtime":1608402678433,"results":"42","hashOfConfig":"40"},{"size":4163,"mtime":1615231374242,"results":"43","hashOfConfig":"40"},{"size":364,"mtime":1615381303320,"results":"44","hashOfConfig":"40"},{"size":4839,"mtime":1615229631321,"results":"45","hashOfConfig":"40"},{"size":7602,"mtime":1609846183762,"results":"46","hashOfConfig":"40"},{"size":4374,"mtime":1608907383046,"results":"47","hashOfConfig":"40"},{"size":1007,"mtime":1609328918667,"results":"48","hashOfConfig":"40"},{"size":14060,"mtime":1609848466451,"results":"49","hashOfConfig":"40"},{"size":910,"mtime":1608402678432,"results":"50","hashOfConfig":"40"},{"size":12895,"mtime":1615388180726,"results":"51","hashOfConfig":"40"},{"size":13599,"mtime":1615355727544,"results":"52","hashOfConfig":"40"},{"size":13031,"mtime":1615388276184,"results":"53","hashOfConfig":"40"},{"size":7572,"mtime":1611667622567,"results":"54","hashOfConfig":"40"},{"size":7677,"mtime":1611668096522,"results":"55","hashOfConfig":"40"},{"size":6236,"mtime":1609507373403,"results":"56","hashOfConfig":"40"},{"size":9577,"mtime":1611747561568,"results":"57","hashOfConfig":"40"},{"size":5262,"mtime":1609834778793,"results":"58","hashOfConfig":"40"},{"size":5413,"mtime":1611668154094,"results":"59","hashOfConfig":"40"},{"size":11245,"mtime":1609833758741,"results":"60","hashOfConfig":"40"},{"size":6888,"mtime":1615231184736,"results":"61","hashOfConfig":"40"},{"size":5495,"mtime":1611668162486,"results":"62","hashOfConfig":"40"},{"size":1366,"mtime":1609501126290,"results":"63","hashOfConfig":"40"},{"size":2190,"mtime":1609848471188,"results":"64","hashOfConfig":"40"},{"size":6123,"mtime":1615388442220,"results":"65","hashOfConfig":"40"},{"size":913,"mtime":1609501335522,"results":"66","hashOfConfig":"40"},{"size":403,"mtime":1608402678429,"results":"67","hashOfConfig":"40"},{"size":4714,"mtime":1615231013780,"results":"68","hashOfConfig":"40"},{"size":2962,"mtime":1611747560913,"results":"69","hashOfConfig":"40"},{"size":2398,"mtime":1609501313553,"results":"70","hashOfConfig":"40"},{"size":1574,"mtime":1609858786928,"results":"71","hashOfConfig":"40"},{"size":4634,"mtime":1615231620971,"results":"72","hashOfConfig":"40"},{"size":1318,"mtime":1615213400035,"results":"73","hashOfConfig":"40"},{"size":5184,"mtime":1615214188035,"results":"74","hashOfConfig":"40"},{"size":5043,"mtime":1615231569058,"results":"75","hashOfConfig":"40"},{"size":723,"mtime":1615387294415,"results":"76","hashOfConfig":"40"},{"size":135,"mtime":1615381193455,"results":"77","hashOfConfig":"40"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},"1sbszf5",{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"103","messages":"104","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"80"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"108","messages":"109","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110","usedDeprecatedRules":"80"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"80"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"126","usedDeprecatedRules":"80"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\Personal\\Workspace\\shek_fashion\\src\\index.tsx",[],["159","160"],"D:\\Personal\\Workspace\\shek_fashion\\src\\serviceWorker.ts",[],"D:\\Personal\\Workspace\\shek_fashion\\src\\config\\firebase.ts",[],"D:\\Personal\\Workspace\\shek_fashion\\src\\App.tsx",[],"D:\\Personal\\Workspace\\shek_fashion\\src\\store\\reducers\\index.ts",[],"D:\\Personal\\Workspace\\shek_fashion\\src\\components\\auth\\signin.tsx",[],"D:\\Personal\\Workspace\\shek_fashion\\src\\components\\auth\\signup.tsx",[],"D:\\Personal\\Workspace\\shek_fashion\\src\\components\\dashboard\\dashboard.tsx",[],"D:\\Personal\\Workspace\\shek_fashion\\src\\components\\router\\PrivateRouteWithRole.tsx",[],"D:\\Personal\\Workspace\\shek_fashion\\src\\components\\layout\\navbar.tsx",[],"D:\\Personal\\Workspace\\shek_fashion\\src\\components\\router\\PrivateRoute.tsx",[],"D:\\Personal\\Workspace\\shek_fashion\\src\\components\\product\\productForm.tsx",["161","162"],"D:\\Personal\\Workspace\\shek_fashion\\src\\components\\product\\product.tsx",["163"],"// @ts-ignore\r\nimport React, { useState } from \"react\";\r\nimport { makeStyles, fade } from \"@material-ui/core/styles\";\r\nimport {\r\n  Grid,\r\n  Container,\r\n  Paper,\r\n  Table,\r\n  TableHead,\r\n  TableRow,\r\n  TableCell,\r\n  TableBody,\r\n  Button,\r\n  FormControl,\r\n  InputLabel,\r\n  Select,\r\n} from \"@material-ui/core\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\n\r\nimport InputBase from \"@material-ui/core/InputBase\";\r\nimport { RouteComponentProps, Link } from \"react-router-dom\";\r\nimport { Title } from \"../layout/title\";\r\nimport { compose } from \"redux\";\r\nimport { connect } from \"react-redux\";\r\nimport { firestoreConnect } from \"react-redux-firebase\";\r\nimport { deleteProduct } from \"../../store/actions/productActions\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: \"flex\",\r\n  },\r\n  content: {\r\n    flexGrow: 1,\r\n    height: \"100vh\",\r\n    overflow: \"auto\",\r\n  },\r\n  container: {\r\n    paddingTop: theme.spacing(4),\r\n    paddingBottom: theme.spacing(4),\r\n  },\r\n  seeMore: {\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    display: \"flex\",\r\n    overflow: \"auto\",\r\n    flexDirection: \"column\",\r\n  },\r\n  fixedHeight: {\r\n    height: 240,\r\n  },\r\n  button: {\r\n    marginLeft: 20,\r\n  },\r\n  search: {\r\n    position: \"relative\",\r\n    borderRadius: theme.shape.borderRadius,\r\n    backgroundColor: fade(theme.palette.common.black, 0.15),\r\n    \"&:hover\": {\r\n      backgroundColor: fade(theme.palette.common.black, 0.25),\r\n    },\r\n    marginLeft: 0,\r\n    width: \"100%\",\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      marginLeft: theme.spacing(1),\r\n      width: \"auto\",\r\n    },\r\n  },\r\n  searchIcon: {\r\n    padding: theme.spacing(0, 2),\r\n    height: \"100%\",\r\n    position: \"absolute\",\r\n    pointerEvents: \"none\",\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n  },\r\n  formControl: {\r\n    margin: theme.spacing(1),\r\n    minWidth: 320,\r\n  },\r\n  inputRoot: {\r\n    color: \"inherit\",\r\n  },\r\n  inputInput: {\r\n    padding: theme.spacing(1, 1, 1, 0),\r\n    // vertical padding + font size from searchIcon\r\n    paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\r\n    transition: theme.transitions.create(\"width\"),\r\n    width: \"100%\",\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      width: \"12ch\",\r\n      \"&:focus\": {\r\n        width: \"20ch\",\r\n      },\r\n    },\r\n  },\r\n  appBarSpacer: theme.mixins.toolbar,\r\n}));\r\n\r\ninterface productProp extends RouteComponentProps {\r\n  product: any;\r\n  category: any;\r\n  deleteProduct: (productId: string) => void;\r\n  history: any;\r\n  location: any;\r\n  role: any;\r\n  match: any;\r\n  brands:any;\r\n}\r\n\r\nconst Product: React.FC<productProp> = ({\r\n  location,\r\n  product,\r\n  category,\r\n  brands,\r\n  role,\r\n  deleteProduct,\r\n}) => {\r\n  const classes = useStyles();\r\n  // const [currentPage] = useState(1);\r\n  // const [postsPerPage] = useState(5);\r\n  const [filterStr, setFilterStr] = useState(\"\");\r\n\r\n  const [categ, setCategory] = useState(\"\");\r\n  const [branch, setBranch] = useState(\"\");\r\n  const [brand, setBrand] = useState(\"\");\r\n\r\n  // const branch = location.state.branch;\r\n\r\n  // const indexOfLastPost = currentPage * postsPerPage;\r\n  // const currentMall =\r\n  //   mall != null ? mall.slice(indexOfFirstPost, indexOfLastPost) : null;\r\n\r\n  var filteredBybranch = null;\r\n  if (product != null) {\r\n    filteredBybranch = product.filter((object: any) => {\r\n      return object.branch.toLowerCase().indexOf(branch.toLowerCase()) !== -1;\r\n    });\r\n  }\r\n\r\n  var filteredByCategory = null;\r\n  if (filteredBybranch != null) {\r\n    filteredByCategory = filteredBybranch.filter((object: any) => {\r\n      return object.category.id.toLowerCase().indexOf(categ.toLowerCase()) !== -1;\r\n    });\r\n  }\r\n\r\n  var filteredByBrand = null;\r\n  if (filteredByCategory != null) {\r\n    filteredByBrand = filteredByCategory.filter((object: any) => {\r\n      return object.brand.toLowerCase().indexOf(brand.toLowerCase()) !== -1;\r\n    });\r\n  }\r\n\r\n  var filteredElements = null;\r\n  if (filteredByBrand != null) {\r\n    filteredElements = filteredByBrand.filter((object: any) => {\r\n      return object.code.toLowerCase().indexOf(filterStr.toLowerCase()) !== -1;\r\n    });\r\n  }\r\n\r\n  const handelDelete = async (\r\n    event: React.MouseEvent<HTMLButtonElement, MouseEvent>,\r\n    id: string\r\n  ) => {\r\n    if (window.confirm(\"are you sure you want to delete this?\")) {\r\n      deleteProduct(id);\r\n    }\r\n  };\r\n\r\n  const handleSelectChange = (\r\n    event: React.ChangeEvent<{ name?: string; value: unknown }>\r\n  ) => {\r\n    const name = event.target.value as string;\r\n    setCategory(name);\r\n  };\r\n\r\n  const handleBranchSelectChange = (\r\n    event: React.ChangeEvent<{ name?: string; value: unknown }>\r\n  ) => {\r\n    const name = event.target.value as string;\r\n    setBranch(name);\r\n  };\r\n\r\n  const handleBrandSelectChange = (\r\n    event: React.ChangeEvent<{ name?: string; value: unknown }>\r\n  ) => {\r\n    const name = event.target.value as string;\r\n    setBrand(name);\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <main className={classes.content}>\r\n        <div className={classes.appBarSpacer} />\r\n        <Container maxWidth='lg' className={classes.container}>\r\n          <Grid container spacing={3}>\r\n            <Paper\r\n              style={{\r\n                width: \"100%\",\r\n                paddingLeft: \"10\",\r\n              }}>\r\n              <Grid container spacing={1}>\r\n                <Grid item xs={3} md={3} lg={3}>\r\n                  <br />\r\n                  <div className={classes.search}>\r\n                    <div className={classes.searchIcon}>\r\n                      <SearchIcon />\r\n                    </div>\r\n                    <InputBase\r\n                      placeholder='Search…'\r\n                      classes={{\r\n                        root: classes.inputRoot,\r\n                        input: classes.inputInput,\r\n                      }}\r\n                      inputProps={{ \"aria-label\": \"search product\" }}\r\n                      value={filterStr}\r\n                      onChange={(e) => setFilterStr(e.target.value)}\r\n                    />\r\n                  </div>\r\n                </Grid>\r\n\r\n                <Grid item xs={3}>\r\n                  <FormControl\r\n                    variant='outlined'\r\n                    className={classes.formControl}>\r\n                    <InputLabel htmlFor='outlined-age-native-simple'>\r\n                      Branch\r\n                    </InputLabel>\r\n                    <Select\r\n                      native\r\n                      id='branch'\r\n                      onChange={handleBranchSelectChange}\r\n                      label='Branch'\r\n                      name='branch'\r\n                      value={branch}\r\n                      inputProps={{\r\n                        name: \"branch\",\r\n                        id: \"outlined-age-native-simple\",\r\n                      }}>\r\n                      <option aria-label='None' value='' />\r\n                      <option value='branch-1'>branch-1</option>\r\n                      <option value='branch-2'>branch-2</option>\r\n                      <option value='branch-3'>branch-3</option>\r\n                    </Select>\r\n                  </FormControl>\r\n                </Grid>\r\n\r\n                <Grid item xs={3}>\r\n                  <FormControl\r\n                    variant='outlined'\r\n                    className={classes.formControl}>\r\n                    <InputLabel htmlFor='outlined-age-native-simple'>\r\n                      Category\r\n                    </InputLabel>\r\n                    <Select\r\n                      native\r\n                      id='category'\r\n                      onChange={handleSelectChange}\r\n                      label='Category'\r\n                      name='category'\r\n                      value={categ}\r\n                      inputProps={{\r\n                        name: \"category\",\r\n                        id: \"outlined-age-native-simple\",\r\n                      }}>\r\n                      <option aria-label='None' value='' />\r\n                      {category != null\r\n                        ? category.map((cat: any, index: any) => {\r\n                            return (\r\n                              <option key={index} value={cat.id}>\r\n                                {cat.name}\r\n                              </option>\r\n                            );\r\n                          })\r\n                        : null}\r\n                    </Select>\r\n                  </FormControl>\r\n                </Grid>\r\n                <Grid item xs={3}>\r\n                  <FormControl\r\n                    variant='outlined'\r\n                    className={classes.formControl}>\r\n                    <InputLabel htmlFor='outlined-age-native-simple'>\r\n                      Brand\r\n                    </InputLabel>\r\n                    <Select\r\n                      native\r\n                      id='brand'\r\n                      onChange={handleBrandSelectChange}\r\n                      label='Brand'\r\n                      name='brand'\r\n                      value={brand}\r\n                      inputProps={{\r\n                        name: \"brand\",\r\n                        id: \"outlined-age-native-simple\",\r\n                      }}>\r\n                      <option aria-label='None' value='' />\r\n                      {brands != null\r\n                        ? brands.map((cat: any, index: any) => {\r\n                            return (\r\n                              <option key={index} value={cat.name}>\r\n                                {cat.name}\r\n                              </option>\r\n                            );\r\n                          })\r\n                        : null}\r\n                    </Select>\r\n                  </FormControl>\r\n                </Grid>\r\n              </Grid>\r\n              <Title>Products</Title>\r\n              <Table size='small'>\r\n                <TableHead>\r\n                  <TableRow>\r\n                    <TableCell>Name</TableCell>\r\n                    <TableCell>Size</TableCell>\r\n                    <TableCell>Brand</TableCell>\r\n                    <TableCell>Code</TableCell>\r\n                    <TableCell>Stock</TableCell>\r\n                    <TableCell>Color</TableCell>\r\n                    <TableCell>Base Price</TableCell>\r\n                    <TableCell>Image</TableCell>\r\n                    <TableCell>Actions</TableCell>\r\n                  </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                  {filteredElements != null\r\n                    ? filteredElements.map((row: any) => (\r\n                        <TableRow key={row.id}>\r\n                          <TableCell>{row.name}</TableCell>\r\n                          <TableCell>{row.size}</TableCell>\r\n                          <TableCell>{row.brand}</TableCell>\r\n                          <TableCell>{row.code}</TableCell>\r\n                          <TableCell>{row.stock < 0 ? 0 : row.stock}</TableCell>\r\n                          <TableCell>{row.color}</TableCell>\r\n                          <TableCell>{row.price}</TableCell>\r\n                          <TableCell>\r\n                            {\r\n                              row.image!=null?<img src={row.image} width='50' height='50' alt='Product' />:null\r\n                            }\r\n                            \r\n                          </TableCell>\r\n\r\n                          <TableCell>\r\n                            {role == \"admin\" ? (\r\n                              <>\r\n                                <Button\r\n                                  variant='outlined'\r\n                                  size='small'\r\n                                  color='primary'\r\n                                  className={classes.button}>\r\n                                  <Link\r\n                                    style={{\r\n                                      textDecoration: \"none\",\r\n                                    }}\r\n                                    to={{\r\n                                      pathname: `/products/edit`,\r\n                                      state: { product: row },\r\n                                    }}>\r\n                                    Edit\r\n                                  </Link>\r\n                                </Button>\r\n\r\n                                <Button\r\n                                  variant='outlined'\r\n                                  size='small'\r\n                                  color='secondary'\r\n                                  className={classes.button}\r\n                                  onClick={(e) => handelDelete(e, row.id)}>\r\n                                  <DeleteIcon />\r\n                                </Button>\r\n                              </>\r\n                            ) : null}\r\n                          </TableCell>\r\n                        </TableRow>\r\n                      ))\r\n                    : null}\r\n                </TableBody>\r\n              </Table>\r\n            </Paper>\r\n          </Grid>\r\n        </Container>\r\n      </main>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state: any) => {\r\n  console.log(state);\r\n  return {\r\n    product: state.firestore.ordered.product,\r\n    category: state.firestore.ordered.category,\r\n    role: state.firebase.profile.role,\r\n    brands: state.firestore.ordered.brand,\r\n  };\r\n};\r\nexport default compose(\r\n  connect(mapStateToProps, { deleteProduct }),\r\n  firestoreConnect([\r\n    {\r\n      collection: \"product\",\r\n    },\r\n    {\r\n      collection: \"category\",\r\n    },\r\n    {\r\n      collection: \"brand\",\r\n    },\r\n  ])\r\n)(Product);\r\n","D:\\Personal\\Workspace\\shek_fashion\\src\\components\\product\\productEditForm.tsx",["164","165","166"],"D:\\Personal\\Workspace\\shek_fashion\\src\\components\\sales\\sales.tsx",["167"],"// @ts-ignore\r\nimport React , {useState} from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport {\r\n  Grid,\r\n  Container,\r\n  Paper,\r\n  Table,\r\n  TableHead,\r\n  TableRow,\r\n  TableCell,\r\n  TableBody,\r\n  Button,\r\n  FormControl,\r\n  InputLabel,\r\n  Select,\r\n} from \"@material-ui/core\";\r\nimport { RouteComponentProps, Link } from \"react-router-dom\";\r\nimport { Title } from \"../layout/title\";\r\nimport { compose } from \"redux\";\r\nimport { connect } from \"react-redux\";\r\nimport { firestoreConnect } from \"react-redux-firebase\";\r\nimport { deleteSales } from \"../../store/actions/salesAction\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: \"flex\",\r\n  },\r\n  content: {\r\n    flexGrow: 1,\r\n    height: \"100vh\",\r\n    overflow: \"auto\",\r\n  },\r\n  container: {\r\n    paddingTop: theme.spacing(4),\r\n    paddingBottom: theme.spacing(4),\r\n  },\r\n  seeMore: {\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    display: \"flex\",\r\n    overflow: \"auto\",\r\n    flexDirection: \"column\",\r\n  },\r\n  fixedHeight: {\r\n    height: 240,\r\n  },\r\n  button: {\r\n    marginLeft: 20,\r\n  },\r\n  formControl: {\r\n    margin: theme.spacing(1),\r\n    minWidth: 320,\r\n  },\r\n  appBarSpacer: theme.mixins.toolbar,\r\n}));\r\n\r\ninterface salesProp extends RouteComponentProps {\r\n  sales: any;\r\n  deleteSales: (salesId: string) => void;\r\n  role:any;\r\n  history: any;\r\n  location: any;\r\n  match: any;\r\n  auth:any;\r\n}\r\n\r\nconst Sales: React.FC<salesProp> = ({\r\n  history,\r\n  location,\r\n  match,\r\n  sales,\r\n  deleteSales,\r\n  role,\r\n  auth\r\n}) => {\r\n  const classes = useStyles();\r\n\r\n  const [branch, setBranch] = useState(\"\");\r\n\r\n  const handleBranchSelectChange = (\r\n    event: React.ChangeEvent<{ name?: string; value: unknown }>\r\n  ) => {\r\n    const name = event.target.value as string;\r\n    setBranch(name );\r\n  }; \r\n  \r\n  const handelDelete = async (\r\n    event: React.MouseEvent<HTMLButtonElement, MouseEvent>,\r\n    id: string\r\n  ) => {\r\n    if (window.confirm(\"are you sure you want to delete this?\")) {\r\n      await deleteSales(id);\r\n    }\r\n  };\r\n  var userid=auth.uid;\r\n  var filteredElements = null;\r\n  if (sales != null) {\r\n    filteredElements = sales.filter((object: any) => {\r\n      return object.branch.toLowerCase().indexOf(branch.toLowerCase()) !== -1;\r\n    });\r\n  }\r\n  return (\r\n    <React.Fragment>\r\n      <main className={classes.content}>\r\n        <div className={classes.appBarSpacer} />\r\n        <Container maxWidth='lg' className={classes.container}>\r\n          <Grid container spacing={3}>\r\n            <Paper\r\n              style={{\r\n                width: \"100%\",\r\n                paddingLeft: \"10\",\r\n              }}>\r\n                <Grid item xs={4}>\r\n                <FormControl variant='outlined' className={classes.formControl}>\r\n                  <InputLabel htmlFor='outlined-age-native-simple'>\r\n                    Branch\r\n                  </InputLabel>\r\n                  <Select\r\n                    native\r\n                    id='branch'\r\n                    onChange={handleBranchSelectChange}\r\n                    label='Branch'\r\n                    name='branch'\r\n                    value={branch}\r\n                    inputProps={{\r\n                      name: \"branch\",\r\n                      id: \"outlined-age-native-simple\",\r\n                    }}>\r\n                    <option aria-label='None' value='' />\r\n                    <option value='branch-1'>branch-1</option>\r\n                    <option value='branch-2'>branch-2</option>\r\n                    <option value='branch-3'>branch-3</option>\r\n                    </Select>\r\n                </FormControl>\r\n              </Grid>\r\n              {/* <Grid item xs={4} md={4} lg={4}>\r\n                <br />\r\n                <Button\r\n                  variant='outlined'\r\n                  size='medium'\r\n                  color='primary'\r\n                  className={classes.button}>\r\n                  <Link\r\n                    style={{\r\n                      textDecoration: \"none\",\r\n                    }}\r\n                    to='/sales/add'>\r\n                    Register\r\n                  </Link>\r\n                </Button>\r\n              </Grid> */}\r\n\r\n              <Title>Sold Items</Title>\r\n              <Table size='small'>\r\n                <TableHead>\r\n                  <TableRow>\r\n                    <TableCell>Product</TableCell>\r\n                    <TableCell>Price</TableCell>          \r\n                    <TableCell>Sale Quantity</TableCell>\r\n                    <TableCell>Date</TableCell>\r\n                    <TableCell>Sold By</TableCell>\r\n                    <TableCell>Cashier</TableCell>\r\n                    <TableCell>Action</TableCell>\r\n                  </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                  {filteredElements != null\r\n                    ? filteredElements.map((row: any,index:any) => (\r\n                        <TableRow key={row.id}>\r\n                          <TableCell>{row.product.name},{row.product.brand}</TableCell>\r\n                          <TableCell>{row.price}</TableCell>\r\n                          <TableCell>{row.quantity}</TableCell>      \r\n                          <TableCell>{row.createdAt.toDate().toDateString()}   </TableCell>          \r\n                          <TableCell>{row.soldby}</TableCell>      \r\n                          <TableCell>{row.cashier?.name}</TableCell>\r\n                          <TableCell>\r\n                            {/* {\r\n                              userid===row.cashier.id?( */}\r\n                                {/* <> */}\r\n                                <Button\r\n                              variant='outlined'\r\n                              size='small'\r\n                              color='primary'\r\n                              className={classes.button}>\r\n                              <Link\r\n                                style={{\r\n                                  textDecoration: \"none\",\r\n                                }}\r\n                                to={{\r\n                                  pathname: `/sales/edit`,\r\n                                  state: { sales: row },\r\n                                }}>\r\n                                Edit\r\n                              </Link>\r\n                            </Button>\r\n                             /\r\n                             <Button\r\n                               variant='outlined'\r\n                               size='small'\r\n                               color='secondary'\r\n                               className={classes.button}\r\n                               onClick={(e) => handelDelete(e, row.id)}>\r\n                               Delete\r\n                             </Button>\r\n                             {/* </>\r\n                              ):null\r\n                            } */}\r\n                            \r\n                           \r\n                          </TableCell>\r\n                        </TableRow>\r\n                      ))\r\n                    : null}\r\n                </TableBody>\r\n              </Table>\r\n            </Paper>\r\n          </Grid>\r\n        </Container>\r\n      </main>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state: any) => {\r\n  console.log(state);\r\n  return {\r\n    auth: state.firebase.auth,\r\n    sales: state.firestore.ordered.sales,\r\n    role: state.firebase.profile.role,\r\n  };\r\n};\r\nexport default compose(\r\n  connect(mapStateToProps, { deleteSales }),\r\n  firestoreConnect([\r\n    {\r\n      collection: \"sales\",\r\n    },\r\n  ])\r\n)(Sales);\r\n","D:\\Personal\\Workspace\\shek_fashion\\src\\components\\sales\\salesEditForm.tsx",["168"],"import React, { useEffect, useState } from \"react\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\n// import Link from \"@material-ui/core/Link\";\r\nimport { RouteComponentProps } from \"react-router-dom\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Container from \"@material-ui/core/Container\";\r\n\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { updateSales } from \"../../store/actions/salesAction\";\r\nimport { Theme, Paper, makeStyles, FormControl } from \"@material-ui/core\";\r\nimport Snackbar from \"@material-ui/core/Snackbar\";\r\nimport MuiAlert, { AlertProps } from \"@material-ui/lab/Alert\";\r\nimport { Sales } from \"../../models/sales\";\r\nimport { compose } from \"redux\";\r\nimport { firestoreConnect } from \"react-redux-firebase\";\r\nimport { Autocomplete } from \"@material-ui/lab\";\r\n\r\nfunction Alert(props: AlertProps) {\r\n  return <MuiAlert elevation={6} variant='filled' {...props} />;\r\n}\r\n\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n  root: {\r\n    width: \"100%\",\r\n    \"& > * + *\": {\r\n      marginTop: theme.spacing(2),\r\n    },\r\n  },\r\n  fixedHeight: {\r\n    height: 500,\r\n  },\r\n  paper: {\r\n    marginTop: theme.spacing(8),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    width: \"100%\", // Fix IE 11 issue.\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n  formControl: {\r\n    margin: theme.spacing(1),\r\n    minWidth: 320,\r\n  },\r\n  selectEmpty: {\r\n    marginTop: theme.spacing(2),\r\n  },\r\n}));\r\n\r\ninterface salesProps extends RouteComponentProps {\r\n    updateSales: (sales: Sales) => void;\r\n  product:any;\r\n  auth: any;\r\n  authError?: any;\r\n  role:any;\r\n  history: any;\r\n  location: any;\r\n}\r\nconst SalesEditForm: React.FC<salesProps> = ({ updateSales,product,location,role }) => {\r\n  const [sale, setUser] = useState<Sales>({\r\n    id: \"\",\r\n    price:0,\r\n    productid:\"\",\r\n    quantity:0,\r\n    branch:\"\",\r\n    productname:\"\"\r\n  });\r\n\r\n  const salee = location.state.sales;\r\n  useEffect(() => {\r\n    setUser({\r\n      id: salee.id,\r\n      price:salee.price,\r\n    productid:salee.productid,\r\n    quantity:salee.quantity,\r\n      branch:salee.branch,\r\n      productname:\"\"\r\n      \r\n    });\r\n  }, [\r\n    salee.id,\r\n      salee.price,\r\n    salee.productid,\r\n    salee.quantity,\r\n    salee.branch,\r\n    \"\"\r\n  ]);\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  const handleChange = (\r\n    event: React.ChangeEvent<\r\n      HTMLTextAreaElement | HTMLInputElement | HTMLSelectElement\r\n    >\r\n  ) => {\r\n    setUser({\r\n      ...sale,\r\n      [event.currentTarget!.id]: event.currentTarget!.value,\r\n    });\r\n  };\r\n\r\n\r\n\r\n  const onTagsChange = (event:any, values:any) => {\r\n    \r\n    // This will output an array of objects\r\n    // given by Autocompelte options property.\r\n    if (values!=null) {\r\n      setUser({...sale,productid:values.id,productname:values.name});\r\n    console.log('values',values);\r\n    }     \r\n  \r\n}\r\n\r\n  const handleSubmit = async (event: React.FormEvent<HTMLFormElement>) => {\r\n    event.preventDefault();\r\n    var res = await updateSales(sale);\r\n    if (res != null || res===undefined) {\r\n      setOpen(true);\r\n    }\r\n  };\r\n\r\n  const handleClose = (event?: React.SyntheticEvent, reason?: string) => {\r\n    if (reason === \"clickaway\") {\r\n      return;\r\n    }\r\n\r\n    setOpen(false);\r\n  };\r\n  const classes = useStyles();\r\n\r\n  var filteredElements = null;\r\n  if (product != null && role != null) {\r\n    if (role === \"admin\") {\r\n      filteredElements = product;\r\n    } else {\r\n      filteredElements = product.filter((object: any) => {\r\n        return object.branch.toLowerCase().indexOf(role.toLowerCase()) !== -1;\r\n      });\r\n    }\r\n  }\r\n  return (\r\n    <Container>\r\n      <CssBaseline />\r\n      <div className={classes.paper}>\r\n      <br />\r\n        <br />\r\n        \r\n        <Paper\r\n          style={{\r\n            marginTop: \"20\",\r\n          }}>\r\n          <Typography component='h1' variant='h5'>\r\n            Update Sales\r\n          </Typography>\r\n          <form onSubmit={handleSubmit} noValidate>\r\n            <Grid container spacing={3}>\r\n            <Grid item xs={4}>\r\n            <FormControl variant=\"outlined\" className={classes.formControl}>\r\n        {/* <InputLabel htmlFor=\"outlined-age-native-simple\">Role</InputLabel>\r\n        <Select\r\n          native\r\n          id='productid'\r\n          onChange={handleSelectChange}\r\n                  label=\"Product\"\r\n                  name=\"productid\"\r\n                  value={sale.productid}\r\n          inputProps={{\r\n            name: 'productid',\r\n            id: 'outlined-age-native-simple',\r\n          }}\r\n        >\r\n          <option aria-label=\"None\" value=\"\" />\r\n          {\r\n              product != null? product.map((row: any) => (\r\n                <option value={row.id}>{row.name}</option>\r\n              )):null\r\n          }\r\n         \r\n        </Select> */}\r\n\r\n<Autocomplete\r\n                    id=\"combo-box-demo\"\r\n                    options={filteredElements}\r\n                    getOptionLabel={(option:any) => option.name}\r\n                    onChange={onTagsChange}\r\n                    style={{ width: 300 }}\r\n                    renderInput={(params) => <TextField {...params} label=\"Combo box\" variant=\"outlined\" />}\r\n                  />\r\n              </FormControl>\r\n              </Grid>\r\n              <Grid item xs={4}>\r\n                <FormControl variant='outlined' className={classes.formControl}>\r\n                  {\" \"}\r\n                <TextField\r\n                  variant='outlined'\r\n                  required\r\n                  fullWidth\r\n                  id='quantity'\r\n                  label='Quantity'\r\n                  name='quantity'\r\n                  onChange={handleChange}\r\n                  value={sale.quantity}\r\n                  />\r\n                  </FormControl>\r\n              </Grid>\r\n              <Grid item xs={4}>\r\n                <FormControl variant='outlined' className={classes.formControl}>\r\n                  {\" \"}\r\n                <TextField\r\n                  variant='outlined'\r\n                  required\r\n                  fullWidth\r\n                  name='price'\r\n                  label='Price'\r\n                  id='price'\r\n                  onChange={handleChange}\r\n                  value={sale.price}\r\n                  />\r\n                  </FormControl>\r\n              </Grid>\r\n              </Grid>\r\n            <Grid item xs={4}>\r\n              <Button\r\n                type='submit'\r\n                fullWidth\r\n                variant='contained'\r\n                color='primary'\r\n                className={classes.submit}>\r\n                Register Sale\r\n              </Button>\r\n            </Grid>\r\n          </form>\r\n        </Paper>\r\n      </div>\r\n      <Snackbar open={open} autoHideDuration={6000} onClose={handleClose}>\r\n        <Alert onClose={handleClose} severity='success'>\r\n          This is a success message!\r\n        </Alert>\r\n      </Snackbar>\r\n    </Container>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state: any) => ({\r\n  auth: state.firebase.auth,\r\n  product: state.firestore.ordered.product,\r\n  role: state.firebase.profile.role,\r\n\r\n});\r\n\r\n// export default connect(mapStateToProps, { registerProduct })(SalesForm);\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, { updateSales }),\r\n    firestoreConnect([\r\n      {\r\n        collection: \"product\",\r\n      },      \r\n    ])\r\n  )(SalesEditForm);\r\n","D:\\Personal\\Workspace\\shek_fashion\\src\\components\\report\\report.tsx",[],"D:\\Personal\\Workspace\\shek_fashion\\src\\components\\sales\\salesForm.tsx",[],"D:\\Personal\\Workspace\\shek_fashion\\src\\components\\users\\users.tsx",[],"D:\\Personal\\Workspace\\shek_fashion\\src\\components\\settings\\settingsForm.tsx",[],"D:\\Personal\\Workspace\\shek_fashion\\src\\components\\stock\\lowStockList.tsx",[],"D:\\Personal\\Workspace\\shek_fashion\\src\\components\\settings\\settings.tsx",["169","170","171","172","173","174","175","176","177","178","179"],"// @ts-ignore\r\nimport React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport {\r\n  Grid,\r\n  Container,\r\n  Paper,\r\n  Table,\r\n  TableHead,\r\n  TableRow,\r\n  TableCell,\r\n  TableBody,\r\n  Button,\r\n  Tabs,\r\n  Tab,\r\n  AppBar,\r\n  Typography,\r\n  Box,\r\n} from \"@material-ui/core\";\r\nimport { RouteComponentProps, Link } from \"react-router-dom\";\r\nimport { Title } from \"../layout/title\";\r\nimport { compose } from \"redux\";\r\nimport { connect } from \"react-redux\";\r\nimport { firestoreConnect } from \"react-redux-firebase\";\r\nimport { deleteCategory } from \"../../store/actions/categoryActions\";\r\nimport Categories from '../category/category';\r\nimport Brands from '../brand/brands';\r\n\r\nconst Category = (Categories) as React.ElementType;\r\nconst Brand =(Brands) as React.ElementType;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: \"flex\",\r\n  },\r\n  content: {\r\n    flexGrow: 1,\r\n    height: \"100vh\",\r\n    overflow: \"auto\",\r\n  },\r\n  container: {\r\n    paddingTop: theme.spacing(4),\r\n    paddingBottom: theme.spacing(4),\r\n  },\r\n  seeMore: {\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    display: \"flex\",\r\n    overflow: \"auto\",\r\n    flexDirection: \"column\",\r\n  },\r\n  fixedHeight: {\r\n    height: 240,\r\n  },\r\n  button: {\r\n    marginLeft: 20,\r\n  },\r\n  appBarSpacer: theme.mixins.toolbar,\r\n}));\r\n\r\nfunction TabPanel(props: TabPanelProps) {\r\n  const { children, value, index, ...other } = props;\r\n\r\n  return (\r\n    <div\r\n      role=\"tabpanel\"\r\n      hidden={value !== index}\r\n      id={`simple-tabpanel-${index}`}\r\n      aria-labelledby={`simple-tab-${index}`}\r\n      {...other}\r\n    >\r\n      {value === index && (\r\n        <Box p={3}>\r\n          <Typography>{children}</Typography>\r\n        </Box>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction a11yProps(index: any) {\r\n  return {\r\n    id: `simple-tab-${index}`,\r\n    \"aria-controls\": `simple-tabpanel-${index}`,\r\n  };\r\n}\r\n\r\ninterface salesProp extends RouteComponentProps {\r\n  category: any;\r\n  deleteCategory: (categoryid: string) => void;\r\n  role: any;\r\n  history: any;\r\n  location: any;\r\n  match: any;\r\n  children?: React.ReactNode;\r\n  index: any;\r\n  value: any;\r\n}\r\n\r\ninterface TabPanelProps {\r\n  children?: React.ReactNode;\r\n  index: any;\r\n  value: any;\r\n}\r\n\r\nconst Settings: React.FC<salesProp> = ({\r\n  history,\r\n  location,\r\n  match,\r\n  category,\r\n  deleteCategory,\r\n  role,\r\n}) => {\r\n  const classes = useStyles();\r\n  const handelDelete = async (\r\n    event: React.MouseEvent<HTMLButtonElement, MouseEvent>,\r\n    id: string\r\n  ) => {\r\n    if (window.confirm(\"are you sure you want to delete this?\")) {\r\n      await deleteCategory(id);\r\n    }\r\n  };\r\n\r\n  const [value, setValue] = React.useState(0);\r\n\r\n  const handleChange = (event: React.ChangeEvent<{}>, newValue: number) => {\r\n    setValue(newValue);\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <main className={classes.content}>\r\n        <div className={classes.appBarSpacer} />\r\n        <Container maxWidth=\"lg\" className={classes.container}>\r\n          <AppBar position=\"static\">\r\n            <Tabs\r\n              value={value}\r\n              onChange={handleChange}\r\n              aria-label=\"simple tabs example\"\r\n            >\r\n              <Tab label=\"Category\" {...a11yProps(0)} />\r\n              <Tab label=\"Brand\" {...a11yProps(1)} />              \r\n            </Tabs>\r\n          </AppBar>\r\n          <TabPanel value={value} index={0}>\r\n            <Category/>\r\n          </TabPanel>\r\n          <TabPanel value={value} index={1}>\r\n            <Brand/>\r\n          </TabPanel>\r\n          {/* <Grid container spacing={3}>\r\n            <Paper\r\n              style={{\r\n                width: \"100%\",\r\n                paddingLeft: \"10\",\r\n              }}\r\n            >\r\n              <Grid item xs={4} md={4} lg={4}>\r\n                <br />\r\n                <Button\r\n                  variant=\"outlined\"\r\n                  size=\"medium\"\r\n                  color=\"primary\"\r\n                  className={classes.button}\r\n                >\r\n                  <Link\r\n                    style={{\r\n                      textDecoration: \"none\",\r\n                    }}\r\n                    to=\"/settings/add\"\r\n                  >\r\n                    Add Category\r\n                  </Link>\r\n                </Button>\r\n              </Grid>\r\n\r\n              <Title>Categories</Title>\r\n              <Table size=\"small\">\r\n                <TableHead>\r\n                  <TableRow>\r\n                    <TableCell>ID</TableCell>\r\n                    <TableCell>Name</TableCell>\r\n                    <TableCell>Action</TableCell>\r\n                  </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                  {category != null\r\n                    ? category.map((row: any, index: any) => (\r\n                        <TableRow key={row.id}>\r\n                          <TableCell>{index + 1}</TableCell>\r\n                          <TableCell>{row.name}</TableCell>\r\n                          <TableCell>\r\n                            <Button\r\n                              variant=\"outlined\"\r\n                              size=\"small\"\r\n                              color=\"primary\"\r\n                              className={classes.button}\r\n                            >\r\n                              <Link\r\n                                style={{\r\n                                  textDecoration: \"none\",\r\n                                }}\r\n                                to={{\r\n                                  pathname: `/settings/edit`,\r\n                                  state: { category: row },\r\n                                }}\r\n                              >\r\n                                Edit\r\n                              </Link>\r\n                            </Button>\r\n                            /\r\n                            <Button\r\n                              variant=\"outlined\"\r\n                              size=\"small\"\r\n                              color=\"secondary\"\r\n                              className={classes.button}\r\n                              onClick={(e) => handelDelete(e, row.id)}\r\n                            >\r\n                              Delete\r\n                            </Button>\r\n                          </TableCell>\r\n                        </TableRow>\r\n                      ))\r\n                    : null}\r\n                </TableBody>\r\n              </Table>\r\n            </Paper>\r\n          </Grid> */}\r\n        </Container>\r\n      </main>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state: any) => {\r\n  console.log(state);\r\n  return {\r\n    category: state.firestore.ordered.category,\r\n    role: state.firebase.profile.role,\r\n  };\r\n};\r\nexport default compose(\r\n  connect(mapStateToProps, { deleteCategory }),\r\n  firestoreConnect([\r\n    {\r\n      collection: \"category\",\r\n    },\r\n  ])\r\n)(Settings);\r\n","D:\\Personal\\Workspace\\shek_fashion\\src\\components\\settings\\settingsEditForm.tsx",[],"D:\\Personal\\Workspace\\shek_fashion\\src\\store\\actions\\categoryActions.ts",[],"D:\\Personal\\Workspace\\shek_fashion\\src\\store\\actions\\authActions.ts",[],"D:\\Personal\\Workspace\\shek_fashion\\src\\store\\actions\\productActions.ts",["180"],"D:\\Personal\\Workspace\\shek_fashion\\src\\store\\actions\\userActions.ts",[],"D:\\Personal\\Workspace\\shek_fashion\\src\\components\\layout\\title.tsx",[],"D:\\Personal\\Workspace\\shek_fashion\\src\\components\\category\\category.tsx",[],"D:\\Personal\\Workspace\\shek_fashion\\src\\store\\actions\\salesAction.ts",[],"D:\\Personal\\Workspace\\shek_fashion\\src\\components\\report\\reportTable.tsx",[],"D:\\Personal\\Workspace\\shek_fashion\\src\\components\\layout\\orders.tsx",[],"D:\\Personal\\Workspace\\shek_fashion\\src\\components\\brand\\brands.tsx",[],"D:\\Personal\\Workspace\\shek_fashion\\src\\store\\actions\\brandActions.ts",[],"D:\\Personal\\Workspace\\shek_fashion\\src\\components\\brand\\brandEditForm.tsx",[],"D:\\Personal\\Workspace\\shek_fashion\\src\\components\\brand\\brandForm.tsx",[],"D:\\Personal\\Workspace\\shek_fashion\\src\\store\\reducers\\productReducer.ts",[],"D:\\Personal\\Workspace\\shek_fashion\\src\\store\\reducers\\types.ts",[],{"ruleId":"181","replacedBy":"182"},{"ruleId":"183","replacedBy":"184"},{"ruleId":"185","severity":1,"message":"186","line":99,"column":10,"nodeType":"187","messageId":"188","endLine":99,"endColumn":14},{"ruleId":"185","severity":1,"message":"189","line":100,"column":10,"nodeType":"187","messageId":"188","endLine":100,"endColumn":15},{"ruleId":"190","severity":1,"message":"191","line":349,"column":35,"nodeType":"192","messageId":"193","endLine":349,"endColumn":37},{"ruleId":"185","severity":1,"message":"186","line":129,"column":10,"nodeType":"187","messageId":"188","endLine":129,"endColumn":14},{"ruleId":"185","severity":1,"message":"189","line":130,"column":10,"nodeType":"187","messageId":"188","endLine":130,"endColumn":15},{"ruleId":"194","severity":1,"message":"195","line":371,"column":17,"nodeType":"196","endLine":371,"endColumn":68},{"ruleId":"185","severity":1,"message":"197","line":98,"column":7,"nodeType":"187","messageId":"188","endLine":98,"endColumn":13},{"ruleId":"198","severity":1,"message":"199","line":98,"column":5,"nodeType":"200","endLine":98,"endColumn":7},{"ruleId":"185","severity":1,"message":"201","line":5,"column":3,"nodeType":"187","messageId":"188","endLine":5,"endColumn":7},{"ruleId":"185","severity":1,"message":"202","line":7,"column":3,"nodeType":"187","messageId":"188","endLine":7,"endColumn":8},{"ruleId":"185","severity":1,"message":"203","line":8,"column":3,"nodeType":"187","messageId":"188","endLine":8,"endColumn":8},{"ruleId":"185","severity":1,"message":"204","line":9,"column":3,"nodeType":"187","messageId":"188","endLine":9,"endColumn":12},{"ruleId":"185","severity":1,"message":"205","line":10,"column":3,"nodeType":"187","messageId":"188","endLine":10,"endColumn":11},{"ruleId":"185","severity":1,"message":"206","line":11,"column":3,"nodeType":"187","messageId":"188","endLine":11,"endColumn":12},{"ruleId":"185","severity":1,"message":"207","line":12,"column":3,"nodeType":"187","messageId":"188","endLine":12,"endColumn":12},{"ruleId":"185","severity":1,"message":"208","line":13,"column":3,"nodeType":"187","messageId":"188","endLine":13,"endColumn":9},{"ruleId":"185","severity":1,"message":"209","line":20,"column":31,"nodeType":"187","messageId":"188","endLine":20,"endColumn":35},{"ruleId":"185","severity":1,"message":"210","line":21,"column":10,"nodeType":"187","messageId":"188","endLine":21,"endColumn":15},{"ruleId":"185","severity":1,"message":"211","line":117,"column":9,"nodeType":"187","messageId":"188","endLine":117,"endColumn":21},{"ruleId":"185","severity":1,"message":"212","line":172,"column":11,"nodeType":"187","messageId":"188","endLine":172,"endColumn":15},"no-native-reassign",["213"],"no-negated-in-lhs",["214"],"@typescript-eslint/no-unused-vars","'open' is assigned a value but never used.","Identifier","unusedVar","'opene' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'userid' is assigned a value but never used.","react-hooks/exhaustive-deps","The \"\" literal is not a valid dependency because it never changes. You can safely remove it.","Literal","'Grid' is defined but never used.","'Paper' is defined but never used.","'Table' is defined but never used.","'TableHead' is defined but never used.","'TableRow' is defined but never used.","'TableCell' is defined but never used.","'TableBody' is defined but never used.","'Button' is defined but never used.","'Link' is defined but never used.","'Title' is defined but never used.","'handelDelete' is assigned a value but never used.","'resp' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]